- hosts: localhost
  gather_facts: no
  connection: ssh
  vars:
    identifier: unknown
    source_path: "/home/jenkins/src/images/"
    base_image: "label:sfci-image-publisher"
    base_image_user: "debian"
    build_image: "debian:11"

  tasks:
    - name: Create an instance
      sf_instance:
        name: "image-publisher"
        cpu: 4
        ram: 4096
        disks:
          - "200@{{base_image}}"
        networkspecs:
          - network_uuid="{{identifier}}"
        ssh_key: "{{ lookup('file', '/srv/github/id_ci.pub') }}"
        namespace: "{{identifier}}"
        state: present
      register: imagerebuild

    - name: Add to ansible
      add_host:
        hostname: imagerebuild
        ansible_ssh_host: "{{imagerebuild['meta']['network_interfaces'][0]['ipv4']}}"
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o GlobalKnownHostsFile=/dev/null -o UserKnownHostsFile=/dev/null"
        ansible_ssh_user: "{{base_image_user}}"
        ansible_ssh_private_key_file: "/srv/github/id_ci"
        sf_instance_uuid: "{{imagerebuild['meta']['uuid']}}"
        sf_network_uuid: "{{imagerebuild['meta']['network_interfaces'][0]['network_uuid']}}"
        groups: sfall

    - name: Log instance
      debug:
        msg: "{{imagerebuild}}"

    - name: Wait for instance to present an "OpenSSH" prompt
      wait_for:
        port: 22
        host: "{{hostvars['imagerebuild']['ansible_ssh_host']}}"
        search_regex: OpenSSH
        delay: 10

- hosts: sfall
  gather_facts: yes
  become: true
  vars:
    source_path: "/home/jenkins/src/images/"
    build_image: "debian:11"

  tasks:
    # As recommended on the ansible apt module documentation...
    - name: Install packages only when the apt process is not locked
      apt:
        name: bash
        state: present
      register: apt_action
      retries: 100
      until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

    # I am unsure why I need to manually force this, but I do need to.
    - name: Force an apt-get update
      shell: apt-get update

    - name: apt-get dist-upgrade
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes

    - name: Remove any old build repo
      file:
        path: /root/images
        state: absent

    - name: Copy build repo
      copy:
        src: "{{source_path}}/images"
        dest: /root/
        owner: root
        group: root
        mode: preserve

    - name: Execute build script
      shell:
        cmd: bash build.sh "{{build_image}}"
        chdir: /root/images/

    - name: Delete build instance
      sf_instance:
        uuid: "{{hostvars['imagerebuild']['sf_instance_uuid']}}"
        namespace: "{{identifier}}"
        state: absent

    - name: Delete network
      sf_network:
        uuid: "{{hostvars['imagerebuild']['sf_network_uuid']}}"
        namespace: "{{identifier}}"
        state: absent
